{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AuthorService = /*#__PURE__*/(() => {\n  class AuthorService {\n    constructor(http) {\n      this.http = http;\n      this.baseUrl = environment.baseUrl;\n    }\n\n    addAuthor(author) {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          Authorization: 'Bearer ' + localStorage.getItem('token')\n        })\n      };\n      return this.http.post(this.baseUrl + '/author/add', author, httpOptions);\n    }\n\n    editAuthor(author) {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          Authorization: 'Bearer ' + localStorage.getItem('token')\n        })\n      };\n      return this.http.put(`${this.baseUrl + '/author/editAuthor'}`, author, httpOptions);\n    }\n\n    getAuthorList() {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          Authorization: 'Bearer ' + localStorage.getItem('token')\n        })\n      };\n      return this.http.get(this.baseUrl + '/author/list', httpOptions);\n    }\n\n    deleteAuthor(authorId) {\n      const httpOptions = {\n        headers: new HttpHeaders({\n          Authorization: 'Bearer ' + localStorage.getItem('token')\n        })\n      };\n      return this.http.delete(`${this.baseUrl + '/author/deletAuthor'}/${authorId}`, httpOptions);\n    }\n\n  }\n\n  AuthorService.ɵfac = function AuthorService_Factory(t) {\n    return new (t || AuthorService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  AuthorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthorService,\n    factory: AuthorService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthorService;\n})();","map":null,"metadata":{},"sourceType":"module"}