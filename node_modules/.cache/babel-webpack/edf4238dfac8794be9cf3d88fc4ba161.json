{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/author.service\";\nimport * as i3 from \"src/app/services/alertify.service\";\nimport * as i4 from \"@angular/common\";\n\nfunction AddAuthorComponent_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 12);\n    i0.ɵɵtext(1, \" Please provide first name \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AddAuthorComponent_span_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 12);\n    i0.ɵɵtext(1, \" Please provide last name \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let AddAuthorComponent = /*#__PURE__*/(() => {\n  class AddAuthorComponent {\n    constructor(fb, authorService, alertify) {\n      this.fb = fb;\n      this.authorService = authorService;\n      this.alertify = alertify;\n    }\n\n    ngOnInit() {\n      this.createAuthorForm();\n    }\n\n    createAuthorForm() {\n      this.addAuthorForm = this.fb.group({\n        firstName: [null, Validators.required, Validators.pattern('^[a-zA-Z]+$')],\n        lastName: [null, [Validators.required, Validators.pattern('^[a-zA-Z]+$')]]\n      });\n    }\n\n    onSubmit() {\n      this.authorSubmitted = true;\n\n      if (this.addAuthorForm.valid) {\n        this.authorService.addAuthor(this.authorData()).subscribe(() => {\n          this.onReset();\n          this.alertify.success('Congrats, you are successfully add an author');\n        });\n      }\n    }\n\n    authorData() {\n      return this.author = {\n        lastName: this.lastName.value,\n        firstName: this.firstName.value\n      };\n    }\n\n    onReset() {\n      this.authorSubmitted = false;\n      this.addAuthorForm.reset();\n    } // ------------------------------------\n    // Getter methods for all form controls\n    // ------------------------------------\n\n\n    get firstName() {\n      return this.addAuthorForm.get('firstName');\n    }\n\n    get lastName() {\n      return this.addAuthorForm.get('lastName');\n    }\n\n  }\n\n  AddAuthorComponent.ɵfac = function AddAuthorComponent_Factory(t) {\n    return new (t || AddAuthorComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthorService), i0.ɵɵdirectiveInject(i3.AlertifyService));\n  };\n\n  AddAuthorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AddAuthorComponent,\n    selectors: [[\"app-add-author\"]],\n    decls: 20,\n    vars: 3,\n    consts: [[1, \"row\"], [1, \"col-6\", \"m-auto\"], [1, \"card\", \"m-auto\"], [1, \"card-header\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"col-12\"], [\"for\", \"name\", 1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"firstName\", 1, \"form-control\"], [\"class\", \"error-block\", 4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"lastName\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"btn-space\"], [1, \"error-block\"]],\n    template: function AddAuthorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵtext(4, \" Add Author \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵelementStart(6, \"form\", 5);\n        i0.ɵɵlistener(\"ngSubmit\", function AddAuthorComponent_Template_form_ngSubmit_6_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(7, \"div\", 6);\n        i0.ɵɵelementStart(8, \"label\", 7);\n        i0.ɵɵtext(9, \"First Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 8);\n        i0.ɵɵtemplate(11, AddAuthorComponent_span_11_Template, 2, 0, \"span\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 6);\n        i0.ɵɵelementStart(13, \"label\", 7);\n        i0.ɵɵtext(14, \"Last Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 10);\n        i0.ɵɵtemplate(16, AddAuthorComponent_span_16_Template, 2, 0, \"span\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\", 6);\n        i0.ɵɵelementStart(18, \"button\", 11);\n        i0.ɵɵtext(19, \"Add Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formGroup\", ctx.addAuthorForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", !ctx.firstName.valid && (ctx.firstName.touched || ctx.authorSubmitted));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", !ctx.lastName.valid && (ctx.lastName.touched || ctx.authorSubmitted));\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i4.NgIf],\n    styles: [\"\"]\n  });\n  return AddAuthorComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}